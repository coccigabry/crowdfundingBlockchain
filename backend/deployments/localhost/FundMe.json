{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "s_priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x0cba1ebbb54d52d5c99b5851c346ed1febabf61365885c61942eb2b85306e250",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "791012",
    "logsBloom": "0x
    "blockHash": "0x0e439fa09ce9cab73d76f8a6858c223d304ea5a0a21a0bdf030abcbe6a350d8d",
    "transactionHash": "0x0cba1ebbb54d52d5c99b5851c346ed1febabf61365885c61942eb2b85306e250",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "791012",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "ee6fbb1764fe1d8ecc463e79c1f5271f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"s_priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"CocciGabry\",\"details\":\"It implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"It implements price feeds as our library\"}},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"This function funds this contract\"}},\"notice\":\"This contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// PRAGMA\\npragma solidity ^0.8.8;\\n\\n// IMPORTS\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\n// ERROR CODES\\nerror FundMe__NotOwner();\\n\\n// INTERFACES, LIBRARIES, CONTRACTS\\n/**\\n * @title A contract for crowd funding\\n * @author CocciGabry\\n * @notice This contract is to demo a sample funding contract\\n * @dev It implements price feeds as our library\\n */\\ncontract FundMe {\\n  // Type declarations\\n  using PriceConverter for uint256;\\n\\n  // State variables\\n  mapping(address => uint256) private s_addressToAmountFunded;\\n  address[] private s_funders;\\n  address private immutable i_owner;\\n  uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n  AggregatorV3Interface private s_priceFeed;\\n\\n  // Modifiers\\n  modifier onlyOwner() {\\n    if (msg.sender != i_owner) revert FundMe__NotOwner();\\n    _;\\n  }\\n\\n  // Functions - order:\\n\\n  //// constructor\\n  constructor(address s_priceFeedAddress) {\\n    i_owner = msg.sender;\\n    s_priceFeed = AggregatorV3Interface(s_priceFeedAddress);\\n  }\\n\\n  //// receive\\n  receive() external payable {\\n    fund();\\n  }\\n\\n  //// fallback\\n  fallback() external payable {\\n    fund();\\n  }\\n\\n  //// external\\n  //// public\\n  //// internal\\n  //// private\\n\\n  /**\\n   * @notice This function funds this contract\\n   * @dev It implements price feeds as our library\\n   */\\n  function fund() public payable {\\n    s_addressToAmountFunded[msg.sender] += msg.value;\\n    s_funders.push(msg.sender);\\n  }\\n\\n  function withdraw() public payable onlyOwner {\\n    for (\\n      uint256 funderIndex = 0;\\n      funderIndex < s_funders.length;\\n      funderIndex++\\n    ) {\\n      address funder = s_funders[funderIndex];\\n      s_addressToAmountFunded[funder] = 0;\\n    }\\n    s_funders = new address[](0);\\n    (bool success, ) = payable(msg.sender).call{value: address(this).balance}(\\n      \\\"\\\"\\n    );\\n    require(success, \\\"Transfer failed\\\");\\n  }\\n\\n  function cheaperWithdraw() public payable onlyOwner {\\n    address[] memory funders = s_funders;\\n    for (uint256 funderIdx = 0; funderIdx < funders.length; funderIdx++) {\\n      address funder = funders[funderIdx];\\n      s_addressToAmountFunded[funder] = 0;\\n    }\\n    s_funders = new address[](0);\\n    (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n    require(success, \\\"Transfer failed\\\");\\n  }\\n\\n  //// view / pure\\n  function getOwner() public view returns (address) {\\n    return i_owner;\\n  }\\n\\n  function getFunder(uint256 index) public view returns (address) {\\n    return s_funders[index];\\n  }\\n\\n  function getAddressToAmountFunded(\\n    address funder\\n  ) public view returns (uint256) {\\n    return s_addressToAmountFunded[funder];\\n  }\\n\\n  function getPriceFeed() public view returns (AggregatorV3Interface) {\\n    return s_priceFeed;\\n  }\\n}\\n\",\"keccak256\":\"0x7e080feefd95bab25f6324726d87259195ba60b67d037ba4669f725599682ff4\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n  // We could make this public, but then we'd have to deploy it\\n  function getPrice(\\n    AggregatorV3Interface priceFeed\\n  ) internal view returns (uint256) {\\n    (, int256 answer, , , ) = priceFeed.latestRoundData();\\n    // ETH/USD rate in 18 digit\\n    return uint256(answer * 10000000000);\\n    // or (Both will do the same thing)\\n    // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n  }\\n\\n  // 1000000000\\n  function getConversionRate(\\n    uint256 ethAmount,\\n    AggregatorV3Interface priceFeed\\n  ) internal view returns (uint256) {\\n    uint256 ethPrice = getPrice(priceFeed);\\n    uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n    // or (Both will do the same thing)\\n    // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n    // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n    return ethAmountInUsd;\\n  }\\n}\\n\",\"keccak256\":\"0xb541cf4051ab15d523ddc36e8cc04be207ae4b2784d8ab42280f516c465cab66\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610e5e380380610e5e83398181016040528101906100329190610113565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610140565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e0826100b5565b9050919050565b6100f0816100d5565b81146100fb57600080fd5b50565b60008151905061010d816100e7565b92915050565b600060208284031215610129576101286100b0565b5b6000610137848285016100fe565b91505092915050565b60805160601c610ceb610173600039600081816102b50152818161050401528181610554015261074a0152610ceb6000f3fe60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610135578063b60d428814610160578063be2693f01461016a578063d7b4750c146101745761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100df578063893d20e81461010a5761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610968565b61026b565b6040516100cc91906109ae565b60405180910390f35b6100dd6102b3565b005b3480156100eb57600080fd5b506100f46104f3565b60405161010191906109ae565b60405180910390f35b34801561011657600080fd5b5061011f610500565b60405161012c91906109d8565b60405180910390f35b34801561014157600080fd5b5061014a610528565b6040516101579190610a52565b60405180910390f35b6101686101b1565b005b610172610552565b005b34801561018057600080fd5b5061019b60048036038101906101969190610a99565b610816565b6040516101a891906109d8565b60405180910390f35b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546101ff9190610af5565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610338576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156103e35760006001828154811061035e5761035d610b4b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103db90610b7a565b91505061033b565b50600067ffffffffffffffff8111156103ff576103fe610bc3565b5b60405190808252806020026020018201604052801561042d5781602001602082028036833780820191505090505b506001908051906020019061044392919061085e565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161046a90610c23565b60006040518083038185875af1925050503d80600081146104a7576040519150601f19603f3d011682016040523d82523d6000602084013e6104ac565b606091505b50509050806104f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e790610c95565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105d7576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561065b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610611575b5050505050905060005b81518110156106e557600082828151811061068357610682610b4b565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806106dd90610b7a565b915050610665565b50600067ffffffffffffffff81111561070157610700610bc3565b5b60405190808252806020026020018201604052801561072f5781602001602082028036833780820191505090505b506001908051906020019061074592919061085e565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161078c90610c23565b60006040518083038185875af1925050503d80600081146107c9576040519150601f19603f3d011682016040523d82523d6000602084013e6107ce565b606091505b5050905080610812576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080990610c95565b60405180910390fd5b5050565b60006001828154811061082c5761082b610b4b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8280548282559060005260206000209081019282156108d7579160200282015b828111156108d65782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061087e565b5b5090506108e491906108e8565b5090565b5b808211156109015760008160009055506001016108e9565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109358261090a565b9050919050565b6109458161092a565b811461095057600080fd5b50565b6000813590506109628161093c565b92915050565b60006020828403121561097e5761097d610905565b5b600061098c84828501610953565b91505092915050565b6000819050919050565b6109a881610995565b82525050565b60006020820190506109c3600083018461099f565b92915050565b6109d28161092a565b82525050565b60006020820190506109ed60008301846109c9565b92915050565b6000819050919050565b6000610a18610a13610a0e8461090a565b6109f3565b61090a565b9050919050565b6000610a2a826109fd565b9050919050565b6000610a3c82610a1f565b9050919050565b610a4c81610a31565b82525050565b6000602082019050610a676000830184610a43565b92915050565b610a7681610995565b8114610a8157600080fd5b50565b600081359050610a9381610a6d565b92915050565b600060208284031215610aaf57610aae610905565b5b6000610abd84828501610a84565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b0082610995565b9150610b0b83610995565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610b4057610b3f610ac6565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610b8582610995565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610bb857610bb7610ac6565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610c0d600083610bf2565b9150610c1882610bfd565b600082019050919050565b6000610c2e82610c00565b9150819050919050565b600082825260208201905092915050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b6000610c7f600f83610c38565b9150610c8a82610c49565b602082019050919050565b60006020820190508181036000830152610cae81610c72565b905091905056fea2646970667358221220f33ce75479af187f65ae90a8e7f4b580b5572d1f3841982c5340eaea346a32c964736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610135578063b60d428814610160578063be2693f01461016a578063d7b4750c146101745761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100df578063893d20e81461010a5761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610968565b61026b565b6040516100cc91906109ae565b60405180910390f35b6100dd6102b3565b005b3480156100eb57600080fd5b506100f46104f3565b60405161010191906109ae565b60405180910390f35b34801561011657600080fd5b5061011f610500565b60405161012c91906109d8565b60405180910390f35b34801561014157600080fd5b5061014a610528565b6040516101579190610a52565b60405180910390f35b6101686101b1565b005b610172610552565b005b34801561018057600080fd5b5061019b60048036038101906101969190610a99565b610816565b6040516101a891906109d8565b60405180910390f35b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546101ff9190610af5565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610338576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156103e35760006001828154811061035e5761035d610b4b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103db90610b7a565b91505061033b565b50600067ffffffffffffffff8111156103ff576103fe610bc3565b5b60405190808252806020026020018201604052801561042d5781602001602082028036833780820191505090505b506001908051906020019061044392919061085e565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161046a90610c23565b60006040518083038185875af1925050503d80600081146104a7576040519150601f19603f3d011682016040523d82523d6000602084013e6104ac565b606091505b50509050806104f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e790610c95565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105d7576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561065b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610611575b5050505050905060005b81518110156106e557600082828151811061068357610682610b4b565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806106dd90610b7a565b915050610665565b50600067ffffffffffffffff81111561070157610700610bc3565b5b60405190808252806020026020018201604052801561072f5781602001602082028036833780820191505090505b506001908051906020019061074592919061085e565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161078c90610c23565b60006040518083038185875af1925050503d80600081146107c9576040519150601f19603f3d011682016040523d82523d6000602084013e6107ce565b606091505b5050905080610812576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080990610c95565b60405180910390fd5b5050565b60006001828154811061082c5761082b610b4b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8280548282559060005260206000209081019282156108d7579160200282015b828111156108d65782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061087e565b5b5090506108e491906108e8565b5090565b5b808211156109015760008160009055506001016108e9565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109358261090a565b9050919050565b6109458161092a565b811461095057600080fd5b50565b6000813590506109628161093c565b92915050565b60006020828403121561097e5761097d610905565b5b600061098c84828501610953565b91505092915050565b6000819050919050565b6109a881610995565b82525050565b60006020820190506109c3600083018461099f565b92915050565b6109d28161092a565b82525050565b60006020820190506109ed60008301846109c9565b92915050565b6000819050919050565b6000610a18610a13610a0e8461090a565b6109f3565b61090a565b9050919050565b6000610a2a826109fd565b9050919050565b6000610a3c82610a1f565b9050919050565b610a4c81610a31565b82525050565b6000602082019050610a676000830184610a43565b92915050565b610a7681610995565b8114610a8157600080fd5b50565b600081359050610a9381610a6d565b92915050565b600060208284031215610aaf57610aae610905565b5b6000610abd84828501610a84565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b0082610995565b9150610b0b83610995565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610b4057610b3f610ac6565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610b8582610995565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610bb857610bb7610ac6565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610c0d600083610bf2565b9150610c1882610bfd565b600082019050919050565b6000610c2e82610c00565b9150819050919050565b600082825260208201905092915050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b6000610c7f600f83610c38565b9150610c8a82610c49565b602082019050919050565b60006020820190508181036000830152610cae81610c72565b905091905056fea2646970667358221220f33ce75479af187f65ae90a8e7f4b580b5572d1f3841982c5340eaea346a32c964736f6c63430008080033",
  "devdoc": {
    "author": "CocciGabry",
    "details": "It implements price feeds as our library",
    "kind": "dev",
    "methods": {
      "fund()": {
        "details": "It implements price feeds as our library"
      }
    },
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "This function funds this contract"
      }
    },
    "notice": "This contract is to demo a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 74,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}